'''
그래프 이론

1. 다익스트라
2. disjoint set(union find) => 부록(분할 상환 기법)
3. MST(minimum spanning tree) => 크루스칼 알고리즘


가중치 없는 그래프에서 대응되는 게 다익스트라(가중치 있)
가중치 있는 그래프에서 트리를 구한다 (MST)

최단거리 구하는 데 가중치가 생겼다 -> 다익스트라
BFS로는 못 푼다!

BFS는 시작점 -> 도착점 구하는 게 아니라,
시작점에서 모든 노드의 거리를 구하는 것!!! 미묘한 차이가 있다.

'''

'''
다익스트라

가중치가 없는 그래프에서 최단거리르 구한다 => BFS

음이 아닌 양수 가중치가 있는 그래프에서 최단거리를 구한다 => 다익스트라

(음수 포함) 가중치가 있는 그래프에서 최단거리를 구한다 => 벨만포드 => X

모든 노드에서 다른 모든 노드까지의 거리(N * N쌍)를 모두 구한다 => 플로이드 워셔 => X


'''

'''
# 원본 다익스트라
1. 모두 INF (거리가 무한이라고 생각할 것임 - 모두 못 간다)
1   2   3   4   5
INF INF INF INF INF


2. 방문이 안된 노드 중 거리가 제일 짧은 것을 가져온다. - 자기자신
1   2   3   4   5
0  INF INF INF INF
x


3. 가져온 노드의 주변 노드의 거리를 업데이트한다.
1   2   3   4   5
0   2   3   INF INF
x   x   

4. 4, 5 가중치 업데이트 // 
1   2   3   4   5
0   2   3   7   INF
x   x   



4. 4, 5 가중치 업데이트 (짧은 애들 더해주면서 바꿔주기)
1   2   3   4   5
0   2   3   7   INF
x   x   x   x   x



2. 최적화된 다익스트라


'''