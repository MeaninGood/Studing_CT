# 2775번_부녀회장이 될테야

## a층의 b호에 살려면 자신의 아래(a-1)층의
## 1호부터 b호까지 사람들의 수의 합만큼 데려와 살아야 함
## 아파트에 비어있는 집은 없고 모든 거주민들이 이 계약 조건을 지키고 왔음
## 주어지는 양의 정수 k와 n에 대해 k층의 n호에는 몇 명이 살고 있는지 출력
## 단, 아파트에는 0층부터 있고 각 층에는 1호부터 있으며,
## 0층의 i호에는 i명이 산다

'''
#첫 번째 줄에 Test case의 수 T가 주어짐
#각 케이스마다 입력으로 첫 번째 줄에 정수 k, 두 번째 줄에 정수 n 주어짐

## 각각의 Test case에 대해서 해당 집의 거주민 수 출력
'''

'''

0층 - 1호 : 1명 , 2호 : 2명, 3호 3명

1 / 3
1층의 3호에 살려면
0층 1호 1명, 2호 2명, 3호 3명 = 6명


2 / 3
2층의 3호에 살려면
1층 1호 1명, 2호 3명, 3호 6명 = 10명

'''

T = int(input()) # 테스트 케이스 입력창


for _ in range(T) : # 테스트케이스 만큼 k와 n의 입력창 생성
    k = int(input()) # k층
    n = int(input()) # n호
    
    man = [i for i in range(1, n+1)]
    # n호에 사는 사람들을 구하기 위한 리스트 생성
    # 1호에 사는 사람부터 n+1호에 사는 사람까지 세어줄 리스트 생성

    for i in range(k) : # 모든 층 다 살펴보기
        for j in range(1, n) : # 각 층에 해당하는 호
            man[j] += man[j-1]
            # 2층 3호에 살려면
            # 1층 1호(1명) + 2호(3명) + 3호(6명)
            # man[j]에 해당하는 값에 앞의 값을 더해줌
            
    print(man[-1]) # man 리스트의 가장 마지막 값 출력

'''
print(man)의 결과
(입력)
1
3
(출력)
[1, 3, 6]

(입력)
2
3
(출력)
[1, 4, 10]

-> 2층 3호의 리스트는 다음과 같은 절차로 생성됨
1. 1층 3호의 값 [1, 3, 6]을 한 번 거치고,
2. [1, 1+3 = 4, 4+6 = 10] 으로 생성.

'''